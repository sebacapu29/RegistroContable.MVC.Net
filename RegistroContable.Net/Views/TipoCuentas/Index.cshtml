@model IEnumerable<TipoCuentaViewModel>

@{
	ViewData["Title"] = "Tipo Cuentas";
}
<h1>Tipo de Cuentas</h1>
<h5>El tipo cuenta es cómo podemos agrupar nuestras <meta charset="utf-8" />
	Ejemplo: Préstamos, Ingresos, Egresos, etc.</h5>

<a asp-action="Crear" class="btn btn-primary mb-3">Crear nuevo</a>

<table class="table">
	<thead>

	</thead>
	<tbody id="reordenable">
		@foreach(var tipoCuenta in Model){
			<tr>
				<td>
					<input type="hidden" value="@tipoCuenta.Id" class="ids" />
					<a class="btn btn-primary" asp-action="Editar" asp-route-id="@tipoCuenta.Id"> Editar </a>
					<a class="btn btn-danger" asp-action="Borrar" asp-route-id="@tipoCuenta.Id"> Borrar </a>
				</td>
				<td>
					@tipoCuenta.Nombre
				</td>
			</tr>
		}
	</tbody>
</table>

@section Scripts {
	<script>

		const urlOrdenar = '@Url.Action("orden")';
	
		$(function(){
			$("#reordenable").sortable();
		})
		async function actualizarOrden() {
			const ids = ordenarIdsElementos();
			await enviarIdsAlBack(ids);
		}
		function ordenarIdsElementos() {
			const ids = $(".ids").map(function () {
				return $(this).val();
			}).get();

			return ids;
		}
		async function enviarIdsAlBack(ids) {
			var data = JSON.stringify(ids);
			await fetch(urlOrdenar, {
				method:'POST',
				body:data,
				headers: {
					'Content-type':'application/json'
				}
			})
		}
	</script>
}